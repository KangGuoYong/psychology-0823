<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kgy.mapper.UserAssemblyMapper">

    <resultMap type="entity.UserAssembly" id="UserAssemblyMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="cause" column="cause" jdbcType="VARCHAR"/>
        <result property="priceStatus" column="price_status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询所有-->
    <select id="queryAll" resultMap="UserAssemblyMap">
        select
          id, price, cause, price_status, create_time
        from user_assembly
    </select>
    
    <!--查询单个-->
    <select id="queryById" resultMap="UserAssemblyMap">
        select
          id, price, cause, price_status, create_time
        from user_assembly
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserAssemblyMap">
        select
          id, price, cause, price_status, create_time
        from user_assembly
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="cause != null and cause != ''">
                and cause = #{cause}
            </if>
            <if test="priceStatus != null">
                and price_status = #{priceStatus}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user_assembly
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="cause != null and cause != ''">
                and cause = #{cause}
            </if>
            <if test="priceStatus != null">
                and price_status = #{priceStatus}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user_assembly(price, cause, price_status, create_time)
        values (#{price}, #{cause}, #{priceStatus}, #{createTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_assembly(price, cause, price_status, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.price}, #{entity.cause}, #{entity.priceStatus}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_assembly(price, cause, price_status, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.price}, #{entity.cause}, #{entity.priceStatus}, #{entity.createTime})
        </foreach>
        on duplicate key update
        price = values(price),
        cause = values(cause),
        price_status = values(price_status),
        create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user_assembly
        <set>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="cause != null and cause != ''">
                cause = #{cause},
            </if>
            <if test="priceStatus != null">
                price_status = #{priceStatus},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user_assembly where id = #{id}
    </delete>

</mapper>

